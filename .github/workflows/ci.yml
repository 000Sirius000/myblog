name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:
    name: Build & Test in Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        run: docker build . --file Dockerfile --tag myblog:latest

      - name: Run container
        run: |
          docker run -d --name myblog_ci -p 8000:8000 myblog:latest

      - name: Wait for container to be ready
        run: sleep 10

      - name: Execute tests inside container
        run: docker exec myblog_ci pytest -q

      - name: Stop and remove container
        run: docker rm -f myblog_ci

  deploy:
    name: Deploy to PythonAnywhere via API
    needs: build-and-test
    runs-on: ubuntu-latest
    if: >-
      github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install jq for JSON parsing
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Debug PythonAnywhere auth (using /cpu/)
        env:
          PA_TOKEN: ${{ secrets.PA_TOKEN }}
          PA_USER:  ${{ secrets.PA_USER }}
          PA_HOST:  ${{ secrets.PA_HOST }}
        run: |
          echo "Testing: GET https://$PA_HOST/api/v0/user/$PA_USER/cpu/"
          curl -i \
            -H "Authorization: Token $PA_TOKEN" \
            "https://$PA_HOST/api/v0/user/$PA_USER/cpu/" \
            || exit 1

      - name: Execute deploy commands via new PA console
        env:
          PA_TOKEN: ${{ secrets.PA_TOKEN }}
          PA_USER:  ${{ secrets.PA_USER }}
          PA_HOST:  ${{ secrets.PA_HOST }}
          PA_REPO:  ${{ secrets.PA_REPO_DIR }}
        run: |
          # 1) Create a new console
          console_json=$(curl -s -X POST \
            -H "Authorization: Token $PA_TOKEN" \
            "https://$PA_HOST/api/v0/user/$PA_USER/consoles/")
          console_id=$(echo "$console_json" | jq -r '.id')
          echo "Created console id: $console_id"

          # 2) Send all deploy commands
          cmd="cd $PA_REPO && \
source /home/$PA_USER/.virtualenvs/myblogenv/bin/activate && \
git pull origin master && \
pip install -r $PA_REPO/requirements.txt && \
cd $PA_REPO && \
python manage.py migrate --no-input && \
python manage.py collectstatic --no-input"
          echo "Running deploy commands..."
          curl -s -X POST \
            -H "Authorization: Token $PA_TOKEN" \
            -H "Content-Type: application/json" \
            "https://$PA_HOST/api/v0/user/$PA_USER/consoles/$console_id/send_input/" \
            -d "{\"input\": \"$cmd\"}"

      - name: Reload web app
        env:
          PA_TOKEN: ${{ secrets.PA_TOKEN }}
          PA_USER:  ${{ secrets.PA_USER }}
          PA_HOST:  ${{ secrets.PA_HOST }}
        run: |
          echo "Reloading web app..."
          curl -s -X POST \
            -H "Authorization: Token $PA_TOKEN" \
            "https://$PA_HOST/api/v0/user/$PA_USER/webapps/$PA_USER.pythonanywhere.com/reload/"